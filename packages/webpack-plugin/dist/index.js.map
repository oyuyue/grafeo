{"version":3,"sources":["webpack://@grafeo/webpack-plugin/../node_modules/source-list-map/lib/CodeNode.js","webpack://@grafeo/webpack-plugin/../node_modules/source-list-map/lib/MappingsContext.js","webpack://@grafeo/webpack-plugin/../node_modules/source-list-map/lib/SingleLineNode.js","webpack://@grafeo/webpack-plugin/../node_modules/source-list-map/lib/SourceListMap.js","webpack://@grafeo/webpack-plugin/../node_modules/source-list-map/lib/SourceNode.js","webpack://@grafeo/webpack-plugin/../node_modules/source-list-map/lib/base64-vlq.js","webpack://@grafeo/webpack-plugin/../node_modules/source-list-map/lib/fromStringWithSourceMap.js","webpack://@grafeo/webpack-plugin/../node_modules/source-list-map/lib/helpers.js","webpack://@grafeo/webpack-plugin/../node_modules/source-list-map/lib/index.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/lib/array-set.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/lib/base64-vlq.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/lib/base64.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/lib/binary-search.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/lib/mapping-list.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/lib/quick-sort.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/lib/source-map-consumer.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/lib/source-map-generator.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/lib/source-node.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/lib/util.js","webpack://@grafeo/webpack-plugin/../node_modules/source-map/source-map.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/CachedSource.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/CompatSource.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/ConcatSource.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/OriginalSource.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/PrefixSource.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/RawSource.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/ReplaceSource.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/SizeOnlySource.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/Source.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/SourceMapSource.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/applySourceMap.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/helpers.js","webpack://@grafeo/webpack-plugin/../node_modules/webpack-sources/lib/index.js","webpack://@grafeo/webpack-plugin/./index.js","webpack://@grafeo/webpack-plugin/../webpack-plugin|sync","webpack://@grafeo/webpack-plugin/external \"path\"","webpack://@grafeo/webpack-plugin/webpack/bootstrap","webpack://@grafeo/webpack-plugin/webpack/startup","webpack://@grafeo/webpack-plugin/webpack/runtime/hasOwnProperty shorthand"],"names":["getNumberOfLines","getUnfinishedLine","CodeNode","generatedCode","this","mappingsContext","lines","mapping","Array","join","unfinishedGeneratedLine","prevUnfinished","fn","otherNode","module","exports","sourcesIndices","Map","sourcesContent","hasSourceContent","currentOriginalLine","currentSource","source","originalSource","idx","get","size","set","sources","pair","push","base64VLQ","LINE_MAPPING","SingleLineNode","line","_numberOfLines","_endsWithNewLine","length","sourceIdx","ensureSource","mappings","encode","mergeSingleLineNode","SourceNode","MappingsContext","SourceListMap","isArray","children","add","addGeneratedCode","getMappings","getGeneratedCode","Error","forEach","sln","unshift","preprendGeneratedCode","slice","reverse","normalizedNodes","getNormalizedNodes","newNode","optimizedNodes","mapGeneratedCode","mergedNode","merge","map","options","arrays","getArrays","version","file","undefined","startingLine","code","results","currentLine","index","indexEnd","nextLine","indexOf","lineGenerated","substr","mergeSourceNode","addSingleLineNode","charToIntMap","intToCharMap","split","ch","base64","aNumber","TypeError","aChar","aValue","digit","encoded","vlq","toVLQSigned","VLQ_BASE","decode","aStr","aOutParam","continuation","shifted","i","strLen","result","shift","charAt","value","rest","nodes","currentSourceNodeLine","currentNode","currentSourceIdx","addCode","trim","lineAdded","processMapping","ignore","linePosition","next","addSource","str","nr","lastIndexOf","fromStringWithSourceMap","util","has","Object","prototype","hasOwnProperty","hasNativeMap","ArraySet","_array","_set","create","fromArray","aArray","aAllowDuplicates","len","getOwnPropertyNames","sStr","toSetString","isDuplicate","call","at","aIdx","toArray","aIndex","charCodeAt","number","charCode","recursiveSearch","aLow","aHigh","aNeedle","aHaystack","aCompare","aBias","mid","Math","floor","cmp","LEAST_UPPER_BOUND","GREATEST_LOWER_BOUND","search","MappingList","_sorted","_last","generatedLine","generatedColumn","unsortedForEach","aCallback","aThisArg","aMapping","mappingA","mappingB","lineA","lineB","columnA","columnB","compareByGeneratedPositionsInflated","sort","swap","ary","x","y","temp","doQuickSort","comparator","p","r","low","high","round","random","pivot","j","q","binarySearch","quickSort","SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","parseSourceMapInput","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","getArg","names","sourceRoot","_version","normalize","String","isAbsolute","relative","_names","_sources","_absoluteSources","s","computeSourceURL","_mappings","_sourceMapURL","Mapping","originalLine","originalColumn","name","lastOffset","column","_sections","url","offset","offsetLine","offsetColumn","generatedOffset","consumer","fromSourceMap","__generatedMappings","defineProperty","configurable","enumerable","_parseMappings","__originalMappings","_charIsMappingSeparator","c","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","eachMapping","aContext","aOrder","context","_generatedMappings","_originalMappings","allGeneratedPositionsFor","aArgs","needle","_findSourceIndex","_findMapping","compareByOriginalPositions","lastColumn","aSource","relativeSource","smc","_sourceRoot","_generateSourcesContent","_file","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","segment","end","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","originalMappings","compareByGeneratedPositionsDeflated","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","originalPositionFor","hasContentsOfAllSources","some","sc","sourceContentFor","nullOnMissing","urlParse","fileUriAbsPath","replace","scheme","path","generatedPositionFor","constructor","sectionIndex","section","bias","every","content","generatedPosition","sectionMappings","adjustedMapping","SourceMapGenerator","_skipValidation","_sourcesContents","aSourceMapConsumer","generator","newMapping","generated","original","addMapping","sourceFile","sourceRelative","setSourceContent","_validateMapping","aSourceFile","aSourceContent","keys","applySourceMap","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","aName","JSON","stringify","_serializeMappings","nameIdx","previousGeneratedLine","aSources","key","toJSON","toString","REGEX_NEWLINE","isSourceNode","aLine","aColumn","aChunks","sourceContents","aGeneratedCode","aRelativePath","node","remainingLines","remainingLinesIndex","shiftNextLine","getNextLine","lastGeneratedLine","lastMapping","addMappingWithCode","splice","aChunk","chunk","prepend","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","fromSetString","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","aDefaultValue","arguments","urlRegexp","dataUrlRegexp","aUrl","match","auth","host","port","urlGenerate","aParsedUrl","aPath","part","parts","up","aRoot","aPathUrl","aRootUrl","joined","test","level","supportsNullProto","identity","isProtoString","strcmp","aStr1","aStr2","onlyCompareOriginal","onlyCompareGenerated","parse","sourceURL","sourceMapURL","parsed","substring","Source","mapToBufferedMap","bufferedMap","assign","Buffer","from","bufferedMapToMap","buffer","cachedData","super","_source","_cachedSourceType","_cachedSource","_cachedBuffer","_cachedSize","_cachedMaps","maps","_cachedHashUpdate","hash","bufferedMaps","isBuffer","bufferOrString","byteLength","cacheEntry","sourceAndMap","item","update","currentString","tracker","updateHash","CompatSource","sourceLike","_sourceLike","RawSource","getSourceAndMap","getMap","stringsAsRawSources","WeakSet","ConcatSource","_children","child","_isOptimized","_optimize","items","buffers","concat","listMap","currentRawSources","addStringToRawSources","string","mergeRawSources","rawSource","SPLIT_REGEX","_value","_valueAsBuffer","_name","pos","columns","res","REPLACE_REGEX","prefix","_prefix","output","needPrefix","nl","prefixNextLine","updatedCode","convertToString","_valueIsBuffer","getNode","getListMap","Replacement","start","insertIndex","ReplacementEnumerator","replacements","done","emit","repl","position","nextRepl","resultStr","_replacements","_isSorted","a","b","newValue","_replaceString","diff1","diff2","_sortReplacements","remSource","pop","splitted1","_splitString","splitted2","sourcesInLines","replaceInStringNode","_replaceInStringNode","bind","remaining","footer","currentIndex","idxReplacement","removeChars","newCurrentIndex","finalStr","before","max","after","extraCode","getOriginalSource","splitPosition","nodeEnd","nodePart","startsWith","nodeStart","_size","_error","innerSourceMap","removeOriginalSource","valueIsBuffer","_valueAsString","_hasSourceMap","sourceMapIsBuffer","sourceMapIsString","_sourceMapAsObject","_sourceMapAsString","_sourceMapAsBuffer","_hasOriginalSource","originalSourceIsBuffer","_originalSourceAsString","_originalSourceAsBuffer","_hasInnerSourceMap","innerSourceMapIsBuffer","innerSourceMapIsString","_innerSourceMapAsObject","_innerSourceMapAsString","_innerSourceMapAsBuffer","_removeOriginalSource","_ensureInnerSourceMapString","_ensureSourceMapString","_ensureValueBuffer","_ensureSourceMapBuffer","_ensureOriginalSourceBuffer","_ensureInnerSourceMapBuffer","_ensureValueString","_ensureSourceMapObject","_ensureOriginalSourceString","_ensureInnerSourceMapObject","sourceNode","sourceMapConsumer","removeGeneratedCodeForSourceFile","l2rResult","l2rOutput","middleSourceContents","m2rMappingsByLine","rightSourceContentsSet","rightSourceContentsLines","middleSource","middleSourceLines","middleMapping","m2rBestFit","m2rMappings","l","m","findM2rMapping","middleLine","rightSourceContent","rightSourceContentLines","allowMiddleName","rightSource","rightLine","inputSource","defineExport","ReplaceSource","PLUGIN_NAME","opts","filename","updateExternals","namePrefixExternal","deleteOptimization","updateDevServer","pkg","process","cwd","devServer","headers","disableHostCheck","compiler","shared","hooks","afterEnvironment","tap","libraryTarget","library","jsonpFunction","devtoolNamespace","rules","parser","system","optimization","splitChunks","runtimeChunk","devtool","scripts","originExternals","externals","scope","RegExp","filter","Boolean","compilation","optimizeChunkAssets","chunks","files","isOnlyInitial","updateAsset","old","insert","webpackEmptyContext","req","e","resolve","id","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","o","obj","prop"],"mappings":"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","file":"index.js","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\nconst getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\n\nclass CodeNode {\n\tconstructor(generatedCode) {\n\t\tthis.generatedCode = generatedCode;\n\t}\n\n\tclone() {\n\t\treturn new CodeNode(this.generatedCode);\n\t}\n\n\tgetGeneratedCode() {\n\t\treturn this.generatedCode;\n\t}\n\n\tgetMappings(mappingsContext) {\n\t\tconst lines = getNumberOfLines(this.generatedCode);\n\t\tconst mapping = Array(lines+1).join(\";\");\n\t\tif(lines > 0) {\n\t\t\tmappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode);\n\t\t\tif(mappingsContext.unfinishedGeneratedLine > 0) {\n\t\t\t\treturn mapping + \"A\";\n\t\t\t} else {\n\t\t\t\treturn mapping;\n\t\t\t}\n\t\t} else {\n\t\t\tconst prevUnfinished = mappingsContext.unfinishedGeneratedLine;\n\t\t\tmappingsContext.unfinishedGeneratedLine += getUnfinishedLine(this.generatedCode);\n\t\t\tif(prevUnfinished === 0 && mappingsContext.unfinishedGeneratedLine > 0) {\n\t\t\t\treturn \"A\";\n\t\t\t} else {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\taddGeneratedCode(generatedCode) {\n\t\tthis.generatedCode += generatedCode;\n\t}\n\n\tmapGeneratedCode(fn) {\n\t\tconst generatedCode = fn(this.generatedCode);\n\t\treturn new CodeNode(generatedCode);\n\t}\n\n\tgetNormalizedNodes() {\n\t\treturn [this];\n\t}\n\n\tmerge(otherNode) {\n\t\tif(otherNode instanceof CodeNode) {\n\t\t\tthis.generatedCode += otherNode.generatedCode;\n\t\t\treturn this;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nmodule.exports = CodeNode;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass MappingsContext {\n\tconstructor() {\n\t\tthis.sourcesIndices = new Map();\n\t\tthis.sourcesContent = new Map();\n\t\tthis.hasSourceContent = false;\n\t\tthis.currentOriginalLine = 1;\n\t\tthis.currentSource = 0;\n\t\tthis.unfinishedGeneratedLine = false;\n\t}\n\n\tensureSource(source, originalSource) {\n\t\tlet idx = this.sourcesIndices.get(source);\n\t\tif(typeof idx === \"number\") {\n\t\t\treturn idx;\n\t\t}\n\t\tidx = this.sourcesIndices.size;\n\t\tthis.sourcesIndices.set(source, idx);\n\t\tthis.sourcesContent.set(source, originalSource)\n\t\tif(typeof originalSource === \"string\")\n\t\t\tthis.hasSourceContent = true;\n\t\treturn idx;\n\t}\n\n\tgetArrays() {\n\t\tconst sources = [];\n\t\tconst sourcesContent = [];\n\n\t\tfor(const pair of this.sourcesContent) {\n\t\t\tsources.push(pair[0]);\n\t\t\tsourcesContent.push(pair[1]);\n\t\t}\n\n\t\treturn {\n\t\t\tsources,\n\t\t\tsourcesContent\n\t\t};\n\t}\n}\nmodule.exports = MappingsContext;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst base64VLQ = require(\"./base64-vlq\");\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\nconst getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\n\nconst LINE_MAPPING = \";AAAA\";\n\nclass SingleLineNode {\n\n\tconstructor(generatedCode, source, originalSource, line) {\n\t\tthis.generatedCode = generatedCode;\n\t\tthis.originalSource = originalSource;\n\t\tthis.source = source;\n\t\tthis.line = line || 1;\n\t\tthis._numberOfLines = getNumberOfLines(this.generatedCode);\n\t\tthis._endsWithNewLine = generatedCode[generatedCode.length - 1] === \"\\n\";\n\t}\n\n\tclone() {\n\t\treturn new SingleLineNode(this.generatedCode, this.source, this.originalSource, this.line);\n\t}\n\n\tgetGeneratedCode() {\n\t\treturn this.generatedCode;\n\t}\n\n\tgetMappings(mappingsContext) {\n\t\tif(!this.generatedCode)\n\t\t\treturn \"\";\n\t\tconst lines = this._numberOfLines;\n\t\tconst sourceIdx = mappingsContext.ensureSource(this.source, this.originalSource);\n\t\tlet mappings = \"A\"; // generated column 0\n\t\tif(mappingsContext.unfinishedGeneratedLine)\n\t\t\tmappings = \",\" + base64VLQ.encode(mappingsContext.unfinishedGeneratedLine);\n\t\tmappings += base64VLQ.encode(sourceIdx - mappingsContext.currentSource); // source index\n\t\tmappings += base64VLQ.encode(this.line - mappingsContext.currentOriginalLine); // original line index\n\t\tmappings += \"A\"; // original column 0\n\t\tmappingsContext.currentSource = sourceIdx;\n\t\tmappingsContext.currentOriginalLine = this.line;\n\t\tconst unfinishedGeneratedLine = mappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode)\n\t\tmappings += Array(lines).join(LINE_MAPPING);\n\t\tif(unfinishedGeneratedLine === 0) {\n\t\t\tmappings += \";\";\n\t\t} else {\n\t\t\tif(lines !== 0)\n\t\t\t\tmappings += LINE_MAPPING;\n\t\t}\n\t\treturn mappings;\n\t}\n\n\tgetNormalizedNodes() {\n\t\treturn [this];\n\t}\n\n\tmapGeneratedCode(fn) {\n\t\tconst generatedCode = fn(this.generatedCode);\n\t\treturn new SingleLineNode(generatedCode, this.source, this.originalSource, this.line);\n\t}\n\n\tmerge(otherNode) {\n\t\tif(otherNode instanceof SingleLineNode) {\n\t\t\treturn this.mergeSingleLineNode(otherNode);\n\t\t}\n\t\treturn false;\n\t}\n\n\tmergeSingleLineNode(otherNode) {\n\t\tif(this.source === otherNode.source &&\n\t\t\tthis.originalSource === otherNode.originalSource) {\n\t\t\tif(this.line === otherNode.line) {\n\t\t\t\tthis.generatedCode += otherNode.generatedCode;\n\t\t\t\tthis._numberOfLines += otherNode._numberOfLines;\n\t\t\t\tthis._endsWithNewLine = otherNode._endsWithNewLine;\n\t\t\t\treturn this;\n\t\t\t} else if(this.line + 1 === otherNode.line && \n\t\t\t\tthis._endsWithNewLine &&\n\t\t\t\tthis._numberOfLines === 1 && \n\t\t\t\totherNode._numberOfLines <= 1) {\n\t\t\t\treturn new SourceNode(this.generatedCode + otherNode.generatedCode, this.source, this.originalSource, this.line);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nmodule.exports = SingleLineNode;\n\nconst SourceNode = require(\"./SourceNode\"); // circular dependency\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst CodeNode = require(\"./CodeNode\");\nconst SourceNode = require(\"./SourceNode\");\nconst MappingsContext = require(\"./MappingsContext\");\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\n\nclass SourceListMap {\n\n\tconstructor(generatedCode, source, originalSource) {\n\t\tif(Array.isArray(generatedCode)) {\n\t\t\tthis.children = generatedCode;\n\t\t} else {\n\t\t\tthis.children = [];\n\t\t\tif(generatedCode || source)\n\t\t\t\tthis.add(generatedCode, source, originalSource);\n\t\t}\n\t}\n\n\tadd(generatedCode, source, originalSource) {\n\t\tif(typeof generatedCode === \"string\") {\n\t\t\tif(source) {\n\t\t\t\tthis.children.push(new SourceNode(generatedCode, source, originalSource));\n\t\t\t} else if(this.children.length > 0 && this.children[this.children.length - 1] instanceof CodeNode) {\n\t\t\t\tthis.children[this.children.length - 1].addGeneratedCode(generatedCode);\n\t\t\t} else {\n\t\t\t\tthis.children.push(new CodeNode(generatedCode));\n\t\t\t}\n\t\t} else if(generatedCode.getMappings && generatedCode.getGeneratedCode) {\n\t\t\tthis.children.push(generatedCode);\n\t\t} else if(generatedCode.children) {\n\t\t\tgeneratedCode.children.forEach(function(sln) {\n\t\t\t\tthis.children.push(sln);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid arguments to SourceListMap.protfotype.add: Expected string, Node or SourceListMap\");\n\t\t}\n\t};\n\n\tpreprend(generatedCode, source, originalSource) {\n\t\tif(typeof generatedCode === \"string\") {\n\t\t\tif(source) {\n\t\t\t\tthis.children.unshift(new SourceNode(generatedCode, source, originalSource));\n\t\t\t} else if(this.children.length > 0 && this.children[this.children.length - 1].preprendGeneratedCode) {\n\t\t\t\tthis.children[this.children.length - 1].preprendGeneratedCode(generatedCode);\n\t\t\t} else {\n\t\t\t\tthis.children.unshift(new CodeNode(generatedCode));\n\t\t\t}\n\t\t} else if(generatedCode.getMappings && generatedCode.getGeneratedCode) {\n\t\t\tthis.children.unshift(generatedCode);\n\t\t} else if(generatedCode.children) {\n\t\t\tgeneratedCode.children.slice().reverse().forEach(function(sln) {\n\t\t\t\tthis.children.unshift(sln);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid arguments to SourceListMap.protfotype.prerend: Expected string, Node or SourceListMap\");\n\t\t}\n\t};\n\n\tmapGeneratedCode(fn) {\n\t\tconst normalizedNodes = [];\n\t\tthis.children.forEach(function(sln) {\n\t\t\tsln.getNormalizedNodes().forEach(function(newNode) {\n\t\t\t\tnormalizedNodes.push(newNode);\n\t\t\t});\n\t\t});\n\t\tconst optimizedNodes = [];\n\t\tnormalizedNodes.forEach(function(sln) {\n\t\t\tsln = sln.mapGeneratedCode(fn);\n\t\t\tif(optimizedNodes.length === 0) {\n\t\t\t\toptimizedNodes.push(sln);\n\t\t\t} else {\n\t\t\t\tconst last = optimizedNodes[optimizedNodes.length - 1];\n\t\t\t\tconst mergedNode = last.merge(sln);\n\t\t\t\tif(mergedNode) {\n\t\t\t\t\toptimizedNodes[optimizedNodes.length - 1] = mergedNode;\n\t\t\t\t} else {\n\t\t\t\t\toptimizedNodes.push(sln);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn new SourceListMap(optimizedNodes);\n\t};\n\n\ttoString() {\n\t\treturn this.children.map(function(sln) {\n\t\t\treturn sln.getGeneratedCode();\n\t\t}).join(\"\");\n\t};\n\n\ttoStringWithSourceMap(options) {\n\t\tconst mappingsContext = new MappingsContext();\n\t\tconst source = this.children.map(function(sln) {\n\t\t\treturn sln.getGeneratedCode();\n\t\t}).join(\"\");\n\t\tconst mappings = this.children.map(function(sln) {\n\t\t\treturn sln.getMappings(mappingsContext);\n\t\t}).join(\"\");\n\t\tconst arrays = mappingsContext.getArrays();\n\t\treturn {\n\t\t\tsource,\n\t\t\tmap: {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: options && options.file,\n\t\t\t\tsources: arrays.sources,\n\t\t\t\tsourcesContent: mappingsContext.hasSourceContent ? arrays.sourcesContent : undefined,\n\t\t\t\tmappings: mappings\n\t\t\t}\n\t\t};\n\t}\n}\n\nmodule.exports = SourceListMap;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst base64VLQ = require(\"./base64-vlq\");\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\nconst getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\n\nconst LINE_MAPPING = \";AACA\";\n\nclass SourceNode {\n\n\tconstructor(generatedCode, source, originalSource, startingLine) {\n\t\tthis.generatedCode = generatedCode;\n\t\tthis.originalSource = originalSource;\n\t\tthis.source = source;\n\t\tthis.startingLine = startingLine || 1;\n\t\tthis._numberOfLines = getNumberOfLines(this.generatedCode);\n\t\tthis._endsWithNewLine = generatedCode[generatedCode.length - 1] === \"\\n\";\n\t}\n\n\tclone() {\n\t\treturn new SourceNode(this.generatedCode, this.source, this.originalSource, this.startingLine);\n\t}\n\n\tgetGeneratedCode() {\n\t\treturn this.generatedCode;\n\t}\n\n\taddGeneratedCode(code) {\n\t\tthis.generatedCode += code;\n\t\tthis._numberOfLines += getNumberOfLines(code);\n\t\tthis._endsWithNewLine = code[code.length - 1] === \"\\n\";\n\t}\n\n\tgetMappings(mappingsContext) {\n\t\tif(!this.generatedCode)\n\t\t\treturn \"\";\n\t\tconst lines = this._numberOfLines;\n\t\tconst sourceIdx = mappingsContext.ensureSource(this.source, this.originalSource);\n\t\tlet mappings = \"A\"; // generated column 0\n\t\tif(mappingsContext.unfinishedGeneratedLine)\n\t\t\tmappings = \",\" + base64VLQ.encode(mappingsContext.unfinishedGeneratedLine);\n\t\tmappings += base64VLQ.encode(sourceIdx - mappingsContext.currentSource); // source index\n\t\tmappings += base64VLQ.encode(this.startingLine - mappingsContext.currentOriginalLine); // original line index\n\t\tmappings += \"A\"; // original column 0\n\t\tmappingsContext.currentSource = sourceIdx;\n\t\tmappingsContext.currentOriginalLine = this.startingLine + lines - 1;\n\t\tconst unfinishedGeneratedLine = mappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode)\n\t\tmappings += Array(lines).join(LINE_MAPPING);\n\t\tif(unfinishedGeneratedLine === 0) {\n\t\t\tmappings += \";\";\n\t\t} else {\n\t\t\tif(lines !== 0) {\n\t\t\t\tmappings += LINE_MAPPING;\n\t\t\t}\n\t\t\tmappingsContext.currentOriginalLine++;\n\t\t}\n\t\treturn mappings;\n\t}\n\n\tmapGeneratedCode(fn) {\n\t\tthrow new Error(\"Cannot map generated code on a SourceMap. Normalize to SingleLineNode first.\");\n\t}\n\n\tgetNormalizedNodes() {\n\t\tvar results = [];\n\t\tvar currentLine = this.startingLine;\n\t\tvar generatedCode = this.generatedCode;\n\t\tvar index = 0;\n\t\tvar indexEnd = generatedCode.length;\n\t\twhile(index < indexEnd) {\n\t\t\t// get one generated line\n\t\t\tvar nextLine = generatedCode.indexOf(\"\\n\", index) + 1;\n\t\t\tif(nextLine === 0) nextLine = indexEnd;\n\t\t\tvar lineGenerated = generatedCode.substr(index, nextLine - index);\n\n\t\t\tresults.push(new SingleLineNode(lineGenerated, this.source, this.originalSource, currentLine));\n\n\t\t\t// move cursors\n\t\t\tindex = nextLine;\n\t\t\tcurrentLine++;\n\t\t}\n\t\treturn results;\n\t}\n\n\tmerge(otherNode) {\n\t\tif(otherNode instanceof SourceNode) {\n\t\t\treturn this.mergeSourceNode(otherNode);\n\t\t} else if(otherNode instanceof SingleLineNode) {\n\t\t\treturn this.mergeSingleLineNode(otherNode);\n\t\t}\n\t\treturn false;\n\t}\n\n\tmergeSourceNode(otherNode) {\n\t\tif(this.source === otherNode.source &&\n\t\t\tthis._endsWithNewLine &&\n\t\t\tthis.startingLine + this._numberOfLines === otherNode.startingLine) {\n\t\t\tthis.generatedCode += otherNode.generatedCode;\n\t\t\tthis._numberOfLines += otherNode._numberOfLines;\n\t\t\tthis._endsWithNewLine = otherNode._endsWithNewLine;\n\t\t\treturn this;\n\t\t}\n\t\treturn false;\n\t}\n\n\tmergeSingleLineNode(otherNode) {\n\t\tif(this.source === otherNode.source &&\n\t\t\tthis._endsWithNewLine &&\n\t\t\tthis.startingLine + this._numberOfLines === otherNode.line &&\n\t\t\totherNode._numberOfLines <= 1) {\n\t\t\tthis.addSingleLineNode(otherNode);\n\t\t\treturn this;\n\t\t}\n\t\treturn false;\n\t}\n\n\taddSingleLineNode(otherNode) {\n\t\tthis.generatedCode += otherNode.generatedCode;\n\t\tthis._numberOfLines += otherNode._numberOfLines\n\t\tthis._endsWithNewLine = otherNode._endsWithNewLine;\n\t}\n}\n\nmodule.exports = SourceNode;\nconst SingleLineNode = require(\"./SingleLineNode\"); // circular dependency\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*eslint no-bitwise:0,quotes:0,global-strict:0*/\n\nvar charToIntMap = {};\nvar intToCharMap = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  .split('')\n  .forEach(function (ch, index) {\n    charToIntMap[ch] = index;\n    intToCharMap[index] = ch;\n  });\n\nvar base64 = {};\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nbase64.encode = function base64_encode(aNumber) {\n  if (aNumber in intToCharMap) {\n    return intToCharMap[aNumber];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + aNumber);\n};\n\n/**\n * Decode a single base 64 digit to an integer.\n */\nbase64.decode = function base64_decode(aChar) {\n  if (aChar in charToIntMap) {\n    return charToIntMap[aChar];\n  }\n  throw new TypeError(\"Not a valid base 64 digit: \" + aChar);\n};\n\n\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aOutParam) {\n  var i = 0;\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (i >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n    digit = base64.decode(aStr.charAt(i++));\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aStr.slice(i);\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst base64VLQ = require(\"./base64-vlq\");\nconst SourceNode = require(\"./SourceNode\");\nconst CodeNode = require(\"./CodeNode\");\nconst SourceListMap = require(\"./SourceListMap\");\n\nmodule.exports = function fromStringWithSourceMap(code, map) {\n\tconst sources = map.sources;\n\tconst sourcesContent = map.sourcesContent;\n\tconst mappings = map.mappings.split(\";\");\n\tconst lines = code.split(\"\\n\");\n\tconst nodes = [];\n\tlet currentNode = null;\n\tlet currentLine = 1;\n\tlet currentSourceIdx = 0;\n\tlet currentSourceNodeLine;\n\tfunction addCode(generatedCode) {\n\t\tif(currentNode && currentNode instanceof CodeNode) {\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\n\t\t} else if(currentNode && currentNode instanceof SourceNode && !generatedCode.trim()) {\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\n\t\t\tcurrentSourceNodeLine++;\n\t\t} else {\n\t\t\tcurrentNode = new CodeNode(generatedCode);\n\t\t\tnodes.push(currentNode);\n\t\t}\n\t}\n\tfunction addSource(generatedCode, source, originalSource, linePosition) {\n\t\tif(currentNode && currentNode instanceof SourceNode &&\n\t\t\tcurrentNode.source === source &&\n\t\t\tcurrentSourceNodeLine === linePosition\n\t\t) {\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\n\t\t\tcurrentSourceNodeLine++;\n\t\t} else {\n\t\t\tcurrentNode = new SourceNode(generatedCode, source, originalSource, linePosition);\n\t\t\tcurrentSourceNodeLine = linePosition + 1;\n\t\t\tnodes.push(currentNode);\n\t\t}\n\t}\n\tmappings.forEach(function(mapping, idx) {\n\t\tlet line = lines[idx];\n\t\tif(typeof line === 'undefined') return;\n\t\tif(idx !== lines.length - 1) line += \"\\n\";\n\t\tif(!mapping)\n\t\t\treturn addCode(line);\n\t\tmapping = { value: 0, rest: mapping };\n\t\tlet lineAdded = false;\n\t\twhile(mapping.rest)\n\t\t\tlineAdded = processMapping(mapping, line, lineAdded) || lineAdded;\n\t\tif(!lineAdded)\n\t\t\taddCode(line);\n\t});\n\tif(mappings.length < lines.length) {\n\t\tlet idx = mappings.length;\n\t\twhile(!lines[idx].trim() && idx < lines.length-1) {\n\t\t\taddCode(lines[idx] + \"\\n\");\n\t\t\tidx++;\n\t\t}\n\t\taddCode(lines.slice(idx).join(\"\\n\"));\n\t}\n\treturn new SourceListMap(nodes);\n\tfunction processMapping(mapping, line, ignore) {\n\t\tif(mapping.rest && mapping.rest[0] !== \",\") {\n\t\t\tbase64VLQ.decode(mapping.rest, mapping);\n\t\t}\n\t\tif(!mapping.rest)\n\t\t\treturn false;\n\t\tif(mapping.rest[0] === \",\") {\n\t\t\tmapping.rest = mapping.rest.substr(1);\n\t\t\treturn false;\n\t\t}\n\n\t\tbase64VLQ.decode(mapping.rest, mapping);\n\t\tconst sourceIdx = mapping.value + currentSourceIdx;\n\t\tcurrentSourceIdx = sourceIdx;\n\n\t\tlet linePosition;\n\t\tif(mapping.rest && mapping.rest[0] !== \",\") {\n\t\t\tbase64VLQ.decode(mapping.rest, mapping);\n\t\t\tlinePosition = mapping.value + currentLine;\n\t\t\tcurrentLine = linePosition;\n\t\t} else {\n\t\t\tlinePosition = currentLine;\n\t\t}\n\n\t\tif(mapping.rest) {\n\t\t\tconst next = mapping.rest.indexOf(\",\");\n\t\t\tmapping.rest = next === -1 ? \"\" : mapping.rest.substr(next);\n\t\t}\n\n\t\tif(!ignore) {\n\t\t\taddSource(line, sources ? sources[sourceIdx] : null, sourcesContent ? sourcesContent[sourceIdx] : null, linePosition)\n\t\t\treturn true;\n\t\t}\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nexports.getNumberOfLines = function getNumberOfLines(str) {\n\tlet nr = -1;\n\tlet idx = -1;\n\tdo {\n\t\tnr++\n\t\tidx = str.indexOf(\"\\n\", idx + 1);\n\t} while(idx >= 0);\n\treturn nr;\n};\n\nexports.getUnfinishedLine = function getUnfinishedLine(str) {\n\tconst idx = str.lastIndexOf(\"\\n\");\n\tif(idx === -1)\n\t\treturn str.length;\n\telse\n\t\treturn str.length - idx - 1;\n};\n","exports.SourceListMap = require(\"./SourceListMap\");\nexports.SourceNode = require(\"./SourceNode\");\nexports.SingleLineNode = require(\"./SingleLineNode\");\nexports.CodeNode = require(\"./CodeNode\");\nexports.MappingsContext = require(\"./MappingsContext\");\nexports.fromStringWithSourceMap = require(\"./fromStringWithSourceMap\");\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\n\nconst mapToBufferedMap = map => {\n\tif (typeof map !== \"object\" || !map) return map;\n\tconst bufferedMap = Object.assign({}, map);\n\tif (map.mappings) {\n\t\tbufferedMap.mappings = Buffer.from(map.mappings, \"utf-8\");\n\t}\n\tif (map.sourcesContent) {\n\t\tbufferedMap.sourcesContent = map.sourcesContent.map(\n\t\t\tstr => str && Buffer.from(str, \"utf-8\")\n\t\t);\n\t}\n\treturn bufferedMap;\n};\n\nconst bufferedMapToMap = bufferedMap => {\n\tif (typeof bufferedMap !== \"object\" || !bufferedMap) return bufferedMap;\n\tconst map = Object.assign({}, bufferedMap);\n\tif (bufferedMap.mappings) {\n\t\tmap.mappings = bufferedMap.mappings.toString(\"utf-8\");\n\t}\n\tif (bufferedMap.sourcesContent) {\n\t\tmap.sourcesContent = bufferedMap.sourcesContent.map(\n\t\t\tbuffer => buffer && buffer.toString(\"utf-8\")\n\t\t);\n\t}\n\treturn map;\n};\n\nclass CachedSource extends Source {\n\tconstructor(source, cachedData) {\n\t\tsuper();\n\t\tthis._source = source;\n\t\tthis._cachedSourceType = cachedData ? cachedData.source : undefined;\n\t\tthis._cachedSource = undefined;\n\t\tthis._cachedBuffer = cachedData ? cachedData.buffer : undefined;\n\t\tthis._cachedSize = cachedData ? cachedData.size : undefined;\n\t\tthis._cachedMaps = cachedData ? cachedData.maps : new Map();\n\t\tthis._cachedHashUpdate = cachedData ? cachedData.hash : undefined;\n\t}\n\n\tgetCachedData() {\n\t\t// We don't want to cache strings\n\t\t// So if we have a caches sources\n\t\t// create a buffer from it and only store\n\t\t// if it was a Buffer or string\n\t\tif (this._cachedSource) {\n\t\t\tthis.buffer();\n\t\t}\n\t\tconst bufferedMaps = new Map();\n\t\tfor (const pair of this._cachedMaps) {\n\t\t\tif (pair[1].bufferedMap === undefined) {\n\t\t\t\tpair[1].bufferedMap = mapToBufferedMap(pair[1].map);\n\t\t\t}\n\t\t\tbufferedMaps.set(pair[0], {\n\t\t\t\tmap: undefined,\n\t\t\t\tbufferedMap: pair[1].bufferedMap\n\t\t\t});\n\t\t}\n\t\treturn {\n\t\t\tbuffer: this._cachedBuffer,\n\t\t\tsource:\n\t\t\t\tthis._cachedSourceType !== undefined\n\t\t\t\t\t? this._cachedSourceType\n\t\t\t\t\t: typeof this._cachedSource === \"string\"\n\t\t\t\t\t? true\n\t\t\t\t\t: Buffer.isBuffer(this._cachedSource)\n\t\t\t\t\t? false\n\t\t\t\t\t: undefined,\n\t\t\tsize: this._cachedSize,\n\t\t\tmaps: bufferedMaps,\n\t\t\thash: this._cachedHashUpdate\n\t\t};\n\t}\n\n\toriginalLazy() {\n\t\treturn this._source;\n\t}\n\n\toriginal() {\n\t\tif (typeof this._source === \"function\") this._source = this._source();\n\t\treturn this._source;\n\t}\n\n\tsource() {\n\t\tif (this._cachedSource !== undefined) return this._cachedSource;\n\t\tif (this._cachedBuffer && this._cachedSourceType !== undefined) {\n\t\t\treturn (this._cachedSource = this._cachedSourceType\n\t\t\t\t? this._cachedBuffer.toString(\"utf-8\")\n\t\t\t\t: this._cachedBuffer);\n\t\t} else {\n\t\t\treturn (this._cachedSource = this.original().source());\n\t\t}\n\t}\n\n\tbuffer() {\n\t\tif (typeof this._cachedBuffer !== \"undefined\") return this._cachedBuffer;\n\t\tif (typeof this._cachedSource !== \"undefined\") {\n\t\t\tif (Buffer.isBuffer(this._cachedSource)) {\n\t\t\t\treturn (this._cachedBuffer = this._cachedSource);\n\t\t\t}\n\t\t\treturn (this._cachedBuffer = Buffer.from(this._cachedSource, \"utf-8\"));\n\t\t}\n\t\tif (typeof this.original().buffer === \"function\") {\n\t\t\treturn (this._cachedBuffer = this.original().buffer());\n\t\t}\n\t\tconst bufferOrString = this.source();\n\t\tif (Buffer.isBuffer(bufferOrString)) {\n\t\t\treturn (this._cachedBuffer = bufferOrString);\n\t\t}\n\t\treturn (this._cachedBuffer = Buffer.from(bufferOrString, \"utf-8\"));\n\t}\n\n\tsize() {\n\t\tif (typeof this._cachedSize !== \"undefined\") return this._cachedSize;\n\t\tif (typeof this._cachedSource !== \"undefined\") {\n\t\t\treturn (this._cachedSize = Buffer.byteLength(this._cachedSource));\n\t\t}\n\t\tif (typeof this._cachedBuffer !== \"undefined\") {\n\t\t\treturn (this._cachedSize = this._cachedBuffer.length);\n\t\t}\n\t\treturn (this._cachedSize = this.original().size());\n\t}\n\n\tsourceAndMap(options) {\n\t\tconst key = options ? JSON.stringify(options) : \"{}\";\n\t\tlet cacheEntry = this._cachedMaps.get(key);\n\t\tif (cacheEntry && cacheEntry.map === undefined) {\n\t\t\tcacheEntry.map = bufferedMapToMap(cacheEntry.bufferedMap);\n\t\t}\n\t\tif (typeof this._cachedSource !== \"undefined\") {\n\t\t\tif (cacheEntry === undefined) {\n\t\t\t\tconst map = this.original().map(options);\n\t\t\t\tthis._cachedMaps.set(key, { map, bufferedMap: undefined });\n\t\t\t\treturn {\n\t\t\t\t\tsource: this._cachedSource,\n\t\t\t\t\tmap\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tsource: this._cachedSource,\n\t\t\t\t\tmap: cacheEntry.map\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (cacheEntry !== undefined) {\n\t\t\treturn {\n\t\t\t\tsource: (this._cachedSource = this.original().source()),\n\t\t\t\tmap: cacheEntry.map\n\t\t\t};\n\t\t} else {\n\t\t\tconst result = this.original().sourceAndMap(options);\n\t\t\tthis._cachedSource = result.source;\n\t\t\tthis._cachedMaps.set(key, { map: result.map, bufferedMap: undefined });\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tmap(options) {\n\t\tconst key = options ? JSON.stringify(options) : \"{}\";\n\t\tlet cacheEntry = this._cachedMaps.get(key);\n\t\tif (cacheEntry !== undefined) {\n\t\t\tif (cacheEntry.map === undefined) {\n\t\t\t\tcacheEntry.map = bufferedMapToMap(cacheEntry.bufferedMap);\n\t\t\t}\n\t\t\treturn cacheEntry.map;\n\t\t}\n\t\tconst map = this.original().map(options);\n\t\tthis._cachedMaps.set(key, { map, bufferedMap: undefined });\n\t\treturn map;\n\t}\n\n\tupdateHash(hash) {\n\t\tif (this._cachedHashUpdate !== undefined) {\n\t\t\tfor (const item of this._cachedHashUpdate) hash.update(item);\n\t\t\treturn;\n\t\t}\n\t\tconst update = [];\n\t\tlet currentString = undefined;\n\t\tconst tracker = {\n\t\t\tupdate: item => {\n\t\t\t\tif (typeof item === \"string\" && item.length < 10240) {\n\t\t\t\t\tif (currentString === undefined) {\n\t\t\t\t\t\tcurrentString = item;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentString += item;\n\t\t\t\t\t\tif (currentString > 102400) {\n\t\t\t\t\t\t\tupdate.push(Buffer.from(currentString));\n\t\t\t\t\t\t\tcurrentString = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (currentString !== undefined) {\n\t\t\t\t\t\tupdate.push(Buffer.from(currentString));\n\t\t\t\t\t\tcurrentString = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tupdate.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.original().updateHash(tracker);\n\t\tif (currentString !== undefined) {\n\t\t\tupdate.push(Buffer.from(currentString));\n\t\t}\n\t\tfor (const item of update) hash.update(item);\n\t\tthis._cachedHashUpdate = update;\n\t}\n}\n\nmodule.exports = CachedSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\n\nclass CompatSource extends Source {\n\tstatic from(sourceLike) {\n\t\treturn sourceLike instanceof Source\n\t\t\t? sourceLike\n\t\t\t: new CompatSource(sourceLike);\n\t}\n\n\tconstructor(sourceLike) {\n\t\tsuper();\n\t\tthis._sourceLike = sourceLike;\n\t}\n\n\tsource() {\n\t\treturn this._sourceLike.source();\n\t}\n\n\tbuffer() {\n\t\tif (typeof this._sourceLike.buffer === \"function\") {\n\t\t\treturn this._sourceLike.buffer();\n\t\t}\n\t\treturn super.buffer();\n\t}\n\n\tsize() {\n\t\tif (typeof this._sourceLike.size === \"function\") {\n\t\t\treturn this._sourceLike.size();\n\t\t}\n\t\treturn super.size();\n\t}\n\n\tmap(options) {\n\t\tif (typeof this._sourceLike.map === \"function\") {\n\t\t\treturn this._sourceLike.map(options);\n\t\t}\n\t\treturn super.map(options);\n\t}\n\n\tsourceAndMap(options) {\n\t\tif (typeof this._sourceLike.sourceAndMap === \"function\") {\n\t\t\treturn this._sourceLike.sourceAndMap(options);\n\t\t}\n\t\treturn super.sourceAndMap(options);\n\t}\n\n\tupdateHash(hash) {\n\t\tif (typeof this._sourceLike.updateHash === \"function\") {\n\t\t\treturn this._sourceLike.updateHash(hash);\n\t\t}\n\t\tif (typeof this._sourceLike.map === \"function\") {\n\t\t\tthrow new Error(\n\t\t\t\t\"A Source-like object with a 'map' method must also provide an 'updateHash' method\"\n\t\t\t);\n\t\t}\n\t\thash.update(this.buffer());\n\t}\n}\n\nmodule.exports = CompatSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\nconst RawSource = require(\"./RawSource\");\nconst { SourceNode, SourceMapConsumer } = require(\"source-map\");\nconst { SourceListMap, fromStringWithSourceMap } = require(\"source-list-map\");\nconst { getSourceAndMap, getMap } = require(\"./helpers\");\n\nconst stringsAsRawSources = new WeakSet();\n\nclass ConcatSource extends Source {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._children = [];\n\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\tconst item = arguments[i];\n\t\t\tif (item instanceof ConcatSource) {\n\t\t\t\tfor (const child of item._children) {\n\t\t\t\t\tthis._children.push(child);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._children.push(item);\n\t\t\t}\n\t\t}\n\t\tthis._isOptimized = arguments.length === 0;\n\t}\n\n\tgetChildren() {\n\t\tif (!this._isOptimized) this._optimize();\n\t\treturn this._children;\n\t}\n\n\tadd(item) {\n\t\tif (item instanceof ConcatSource) {\n\t\t\tfor (const child of item._children) {\n\t\t\t\tthis._children.push(child);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._children.push(item);\n\t\t}\n\t\tthis._isOptimized = false;\n\t}\n\n\taddAllSkipOptimizing(items) {\n\t\tfor (const item of items) {\n\t\t\tthis._children.push(item);\n\t\t}\n\t}\n\n\tbuffer() {\n\t\tif (!this._isOptimized) this._optimize();\n\t\tconst buffers = [];\n\t\tfor (const child of this._children) {\n\t\t\tif (typeof child.buffer === \"function\") {\n\t\t\t\tbuffers.push(child.buffer());\n\t\t\t} else {\n\t\t\t\tconst bufferOrString = child.source();\n\t\t\t\tif (Buffer.isBuffer(bufferOrString)) {\n\t\t\t\t\tbuffers.push(bufferOrString);\n\t\t\t\t} else {\n\t\t\t\t\tbuffers.push(Buffer.from(bufferOrString, \"utf-8\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Buffer.concat(buffers);\n\t}\n\n\tsource() {\n\t\tif (!this._isOptimized) this._optimize();\n\t\tlet source = \"\";\n\t\tfor (const child of this._children) {\n\t\t\tsource += child.source();\n\t\t}\n\t\treturn source;\n\t}\n\n\tsize() {\n\t\tif (!this._isOptimized) this._optimize();\n\t\tlet size = 0;\n\t\tfor (const child of this._children) {\n\t\t\tsize += child.size();\n\t\t}\n\t\treturn size;\n\t}\n\n\tmap(options) {\n\t\treturn getMap(this, options);\n\t}\n\n\tsourceAndMap(options) {\n\t\treturn getSourceAndMap(this, options);\n\t}\n\n\tnode(options) {\n\t\tif (!this._isOptimized) this._optimize();\n\t\tconst node = new SourceNode(\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tthis._children.map(function (item) {\n\t\t\t\tif (typeof item.node === \"function\") return item.node(options);\n\t\t\t\tconst sourceAndMap = item.sourceAndMap(options);\n\t\t\t\tif (sourceAndMap.map) {\n\t\t\t\t\treturn SourceNode.fromStringWithSourceMap(\n\t\t\t\t\t\tsourceAndMap.source,\n\t\t\t\t\t\tnew SourceMapConsumer(sourceAndMap.map)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn sourceAndMap.source;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\tif (!this._isOptimized) this._optimize();\n\t\tconst map = new SourceListMap();\n\t\tfor (const item of this._children) {\n\t\t\tif (typeof item === \"string\") {\n\t\t\t\tmap.add(item);\n\t\t\t} else if (typeof item.listMap === \"function\") {\n\t\t\t\tmap.add(item.listMap(options));\n\t\t\t} else {\n\t\t\t\tconst sourceAndMap = item.sourceAndMap(options);\n\t\t\t\tif (sourceAndMap.map) {\n\t\t\t\t\tmap.add(\n\t\t\t\t\t\tfromStringWithSourceMap(sourceAndMap.source, sourceAndMap.map)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tmap.add(sourceAndMap.source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}\n\n\tupdateHash(hash) {\n\t\tif (!this._isOptimized) this._optimize();\n\t\thash.update(\"ConcatSource\");\n\t\tfor (const item of this._children) {\n\t\t\titem.updateHash(hash);\n\t\t}\n\t}\n\n\t_optimize() {\n\t\tconst newChildren = [];\n\t\tlet currentString = undefined;\n\t\tlet currentRawSources = undefined;\n\t\tconst addStringToRawSources = string => {\n\t\t\tif (currentRawSources === undefined) {\n\t\t\t\tcurrentRawSources = string;\n\t\t\t} else if (Array.isArray(currentRawSources)) {\n\t\t\t\tcurrentRawSources.push(string);\n\t\t\t} else {\n\t\t\t\tcurrentRawSources = [\n\t\t\t\t\ttypeof currentRawSources === \"string\"\n\t\t\t\t\t\t? currentRawSources\n\t\t\t\t\t\t: currentRawSources.source(),\n\t\t\t\t\tstring\n\t\t\t\t];\n\t\t\t}\n\t\t};\n\t\tconst addSourceToRawSources = source => {\n\t\t\tif (currentRawSources === undefined) {\n\t\t\t\tcurrentRawSources = source;\n\t\t\t} else if (Array.isArray(currentRawSources)) {\n\t\t\t\tcurrentRawSources.push(source.source());\n\t\t\t} else {\n\t\t\t\tcurrentRawSources = [\n\t\t\t\t\ttypeof currentRawSources === \"string\"\n\t\t\t\t\t\t? currentRawSources\n\t\t\t\t\t\t: currentRawSources.source(),\n\t\t\t\t\tsource.source()\n\t\t\t\t];\n\t\t\t}\n\t\t};\n\t\tconst mergeRawSources = () => {\n\t\t\tif (Array.isArray(currentRawSources)) {\n\t\t\t\tconst rawSource = new RawSource(currentRawSources.join(\"\"));\n\t\t\t\tstringsAsRawSources.add(rawSource);\n\t\t\t\tnewChildren.push(rawSource);\n\t\t\t} else if (typeof currentRawSources === \"string\") {\n\t\t\t\tconst rawSource = new RawSource(currentRawSources);\n\t\t\t\tstringsAsRawSources.add(rawSource);\n\t\t\t\tnewChildren.push(rawSource);\n\t\t\t} else {\n\t\t\t\tnewChildren.push(currentRawSources);\n\t\t\t}\n\t\t};\n\t\tfor (const child of this._children) {\n\t\t\tif (typeof child === \"string\") {\n\t\t\t\tif (currentString === undefined) {\n\t\t\t\t\tcurrentString = child;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentString += child;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (currentString !== undefined) {\n\t\t\t\t\taddStringToRawSources(currentString);\n\t\t\t\t\tcurrentString = undefined;\n\t\t\t\t}\n\t\t\t\tif (stringsAsRawSources.has(child)) {\n\t\t\t\t\taddSourceToRawSources(child);\n\t\t\t\t} else {\n\t\t\t\t\tif (currentRawSources !== undefined) {\n\t\t\t\t\t\tmergeRawSources();\n\t\t\t\t\t\tcurrentRawSources = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tnewChildren.push(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (currentString !== undefined) {\n\t\t\taddStringToRawSources(currentString);\n\t\t}\n\t\tif (currentRawSources !== undefined) {\n\t\t\tmergeRawSources();\n\t\t}\n\t\tthis._children = newChildren;\n\t\tthis._isOptimized = true;\n\t}\n}\n\nmodule.exports = ConcatSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\nconst { SourceNode } = require(\"source-map\");\nconst { SourceListMap } = require(\"source-list-map\");\nconst { getSourceAndMap, getMap } = require(\"./helpers\");\n\nconst SPLIT_REGEX = /(?!$)[^\\n\\r;{}]*[\\n\\r;{}]*/g;\n\nfunction _splitCode(code) {\n\treturn code.match(SPLIT_REGEX) || [];\n}\n\nclass OriginalSource extends Source {\n\tconstructor(value, name) {\n\t\tsuper();\n\t\tconst isBuffer = Buffer.isBuffer(value);\n\t\tthis._value = isBuffer ? undefined : value;\n\t\tthis._valueAsBuffer = isBuffer ? value : undefined;\n\t\tthis._name = name;\n\t}\n\n\tgetName() {\n\t\treturn this._name;\n\t}\n\n\tsource() {\n\t\tif (this._value === undefined) {\n\t\t\tthis._value = this._valueAsBuffer.toString(\"utf-8\");\n\t\t}\n\t\treturn this._value;\n\t}\n\n\tbuffer() {\n\t\tif (this._valueAsBuffer === undefined) {\n\t\t\tthis._valueAsBuffer = Buffer.from(this._value, \"utf-8\");\n\t\t}\n\t\treturn this._valueAsBuffer;\n\t}\n\n\tmap(options) {\n\t\treturn getMap(this, options);\n\t}\n\n\tsourceAndMap(options) {\n\t\treturn getSourceAndMap(this, options);\n\t}\n\n\tnode(options) {\n\t\tif (this._value === undefined) {\n\t\t\tthis._value = this._valueAsBuffer.toString(\"utf-8\");\n\t\t}\n\t\tconst value = this._value;\n\t\tconst name = this._name;\n\t\tconst lines = value.split(\"\\n\");\n\t\tconst node = new SourceNode(\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tlines.map(function (line, idx) {\n\t\t\t\tlet pos = 0;\n\t\t\t\tif (options && options.columns === false) {\n\t\t\t\t\tconst content = line + (idx !== lines.length - 1 ? \"\\n\" : \"\");\n\t\t\t\t\treturn new SourceNode(idx + 1, 0, name, content);\n\t\t\t\t}\n\t\t\t\treturn new SourceNode(\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t_splitCode(line + (idx !== lines.length - 1 ? \"\\n\" : \"\")).map(\n\t\t\t\t\t\tfunction (item) {\n\t\t\t\t\t\t\tif (/^\\s*$/.test(item)) {\n\t\t\t\t\t\t\t\tpos += item.length;\n\t\t\t\t\t\t\t\treturn item;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst res = new SourceNode(idx + 1, pos, name, item);\n\t\t\t\t\t\t\tpos += item.length;\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t\tnode.setSourceContent(name, value);\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\tif (this._value === undefined) {\n\t\t\tthis._value = this._valueAsBuffer.toString(\"utf-8\");\n\t\t}\n\t\treturn new SourceListMap(this._value, this._name, this._value);\n\t}\n\n\tupdateHash(hash) {\n\t\tif (this._valueAsBuffer === undefined) {\n\t\t\tthis._valueAsBuffer = Buffer.from(this._value, \"utf-8\");\n\t\t}\n\t\thash.update(\"OriginalSource\");\n\t\thash.update(this._valueAsBuffer);\n\t\thash.update(this._name || \"\");\n\t}\n}\n\nmodule.exports = OriginalSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\nconst RawSource = require(\"./RawSource\");\nconst { SourceNode } = require(\"source-map\");\nconst { getSourceAndMap, getMap } = require(\"./helpers\");\n\nconst REPLACE_REGEX = /\\n(?=.|\\s)/g;\n\nclass PrefixSource extends Source {\n\tconstructor(prefix, source) {\n\t\tsuper();\n\t\tthis._source =\n\t\t\ttypeof source === \"string\" || Buffer.isBuffer(source)\n\t\t\t\t? new RawSource(source, true)\n\t\t\t\t: source;\n\t\tthis._prefix = prefix;\n\t}\n\n\tgetPrefix() {\n\t\treturn this._prefix;\n\t}\n\n\toriginal() {\n\t\treturn this._source;\n\t}\n\n\tsource() {\n\t\tconst node = this._source.source();\n\t\tconst prefix = this._prefix;\n\t\treturn prefix + node.replace(REPLACE_REGEX, \"\\n\" + prefix);\n\t}\n\n\t// TODO efficient buffer() implementation\n\n\tmap(options) {\n\t\treturn getMap(this, options);\n\t}\n\n\tsourceAndMap(options) {\n\t\treturn getSourceAndMap(this, options);\n\t}\n\n\tnode(options) {\n\t\tconst node = this._source.node(options);\n\t\tconst prefix = this._prefix;\n\t\tconst output = [];\n\t\tconst result = new SourceNode();\n\t\tnode.walkSourceContents(function (source, content) {\n\t\t\tresult.setSourceContent(source, content);\n\t\t});\n\t\tlet needPrefix = true;\n\t\tnode.walk(function (chunk, mapping) {\n\t\t\tconst parts = chunk.split(/(\\n)/);\n\t\t\tfor (let i = 0; i < parts.length; i += 2) {\n\t\t\t\tconst nl = i + 1 < parts.length;\n\t\t\t\tconst part = parts[i] + (nl ? \"\\n\" : \"\");\n\t\t\t\tif (part) {\n\t\t\t\t\tif (needPrefix) {\n\t\t\t\t\t\toutput.push(prefix);\n\t\t\t\t\t}\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tnew SourceNode(\n\t\t\t\t\t\t\tmapping.line,\n\t\t\t\t\t\t\tmapping.column,\n\t\t\t\t\t\t\tmapping.source,\n\t\t\t\t\t\t\tpart,\n\t\t\t\t\t\t\tmapping.name\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tneedPrefix = nl;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tresult.add(output);\n\t\treturn result;\n\t}\n\n\tlistMap(options) {\n\t\tconst prefix = this._prefix;\n\t\tconst map = this._source.listMap(options);\n\t\tlet prefixNextLine = true;\n\t\treturn map.mapGeneratedCode(function (code) {\n\t\t\tlet updatedCode = code.replace(REPLACE_REGEX, \"\\n\" + prefix);\n\t\t\tif (prefixNextLine) updatedCode = prefix + updatedCode;\n\t\t\tprefixNextLine = code.charCodeAt(code.length - 1) === 10; // === /\\n$/.test(code)\n\t\t\treturn updatedCode;\n\t\t});\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(\"PrefixSource\");\n\t\tthis._source.updateHash(hash);\n\t\thash.update(this._prefix);\n\t}\n}\n\nmodule.exports = PrefixSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\nconst { SourceNode } = require(\"source-map\");\nconst { SourceListMap } = require(\"source-list-map\");\n\nclass RawSource extends Source {\n\tconstructor(value, convertToString = false) {\n\t\tsuper();\n\t\tconst isBuffer = Buffer.isBuffer(value);\n\t\tif (!isBuffer && typeof value !== \"string\") {\n\t\t\tthrow new TypeError(\"argument 'value' must be either string of Buffer\");\n\t\t}\n\t\tthis._valueIsBuffer = !convertToString && isBuffer;\n\t\tthis._value = convertToString && isBuffer ? undefined : value;\n\t\tthis._valueAsBuffer = isBuffer ? value : undefined;\n\t}\n\n\tisBuffer() {\n\t\treturn this._valueIsBuffer;\n\t}\n\n\tsource() {\n\t\tif (this._value === undefined) {\n\t\t\tthis._value = this._valueAsBuffer.toString(\"utf-8\");\n\t\t}\n\t\treturn this._value;\n\t}\n\n\tbuffer() {\n\t\tif (this._valueAsBuffer === undefined) {\n\t\t\tthis._valueAsBuffer = Buffer.from(this._value, \"utf-8\");\n\t\t}\n\t\treturn this._valueAsBuffer;\n\t}\n\n\tmap(options) {\n\t\treturn null;\n\t}\n\n\tnode(options) {\n\t\tif (this._value === undefined) {\n\t\t\tthis._value = this._valueAsBuffer.toString(\"utf-8\");\n\t\t}\n\t\treturn new SourceNode(null, null, null, this._value);\n\t}\n\n\tlistMap(options) {\n\t\tif (this._value === undefined) {\n\t\t\tthis._value = this._valueAsBuffer.toString(\"utf-8\");\n\t\t}\n\t\treturn new SourceListMap(this._value);\n\t}\n\n\tupdateHash(hash) {\n\t\tif (this._valueAsBuffer === undefined) {\n\t\t\tthis._valueAsBuffer = Buffer.from(this._value, \"utf-8\");\n\t\t}\n\t\thash.update(\"RawSource\");\n\t\thash.update(this._valueAsBuffer);\n\t}\n}\n\nmodule.exports = RawSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\nconst { SourceNode } = require(\"source-map\");\nconst { getSourceAndMap, getMap, getNode, getListMap } = require(\"./helpers\");\n\nclass Replacement {\n\tconstructor(start, end, content, insertIndex, name) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.content = content;\n\t\tthis.insertIndex = insertIndex;\n\t\tthis.name = name;\n\t}\n}\n\nclass ReplaceSource extends Source {\n\tconstructor(source, name) {\n\t\tsuper();\n\t\tthis._source = source;\n\t\tthis._name = name;\n\t\t/** @type {Replacement[]} */\n\t\tthis._replacements = [];\n\t\tthis._isSorted = true;\n\t}\n\n\tgetName() {\n\t\treturn this._name;\n\t}\n\n\tgetReplacements() {\n\t\tconst replacements = Array.from(this._replacements);\n\t\treplacements.sort((a, b) => {\n\t\t\treturn a.insertIndex - b.insertIndex;\n\t\t});\n\t\treturn replacements;\n\t}\n\n\treplace(start, end, newValue, name) {\n\t\tif (typeof newValue !== \"string\")\n\t\t\tthrow new Error(\n\t\t\t\t\"insertion must be a string, but is a \" + typeof newValue\n\t\t\t);\n\t\tthis._replacements.push(\n\t\t\tnew Replacement(start, end, newValue, this._replacements.length, name)\n\t\t);\n\t\tthis._isSorted = false;\n\t}\n\n\tinsert(pos, newValue, name) {\n\t\tif (typeof newValue !== \"string\")\n\t\t\tthrow new Error(\n\t\t\t\t\"insertion must be a string, but is a \" +\n\t\t\t\t\ttypeof newValue +\n\t\t\t\t\t\": \" +\n\t\t\t\t\tnewValue\n\t\t\t);\n\t\tthis._replacements.push(\n\t\t\tnew Replacement(pos, pos - 1, newValue, this._replacements.length, name)\n\t\t);\n\t\tthis._isSorted = false;\n\t}\n\n\tsource() {\n\t\treturn this._replaceString(this._source.source());\n\t}\n\n\tmap(options) {\n\t\tif (this._replacements.length === 0) {\n\t\t\treturn this._source.map(options);\n\t\t}\n\t\treturn getMap(this, options);\n\t}\n\n\tsourceAndMap(options) {\n\t\tif (this._replacements.length === 0) {\n\t\t\treturn this._source.sourceAndMap(options);\n\t\t}\n\t\treturn getSourceAndMap(this, options);\n\t}\n\n\toriginal() {\n\t\treturn this._source;\n\t}\n\n\t_sortReplacements() {\n\t\tif (this._isSorted) return;\n\t\tthis._replacements.sort(function (a, b) {\n\t\t\tconst diff1 = b.end - a.end;\n\t\t\tif (diff1 !== 0) return diff1;\n\t\t\tconst diff2 = b.start - a.start;\n\t\t\tif (diff2 !== 0) return diff2;\n\t\t\treturn b.insertIndex - a.insertIndex;\n\t\t});\n\t\tthis._isSorted = true;\n\t}\n\n\t_replaceString(str) {\n\t\tif (typeof str !== \"string\")\n\t\t\tthrow new Error(\n\t\t\t\t\"str must be a string, but is a \" + typeof str + \": \" + str\n\t\t\t);\n\t\tthis._sortReplacements();\n\t\tconst result = [str];\n\t\tthis._replacements.forEach(function (repl) {\n\t\t\tconst remSource = result.pop();\n\t\t\tconst splitted1 = this._splitString(remSource, Math.floor(repl.end + 1));\n\t\t\tconst splitted2 = this._splitString(splitted1[0], Math.floor(repl.start));\n\t\t\tresult.push(splitted1[1], repl.content, splitted2[0]);\n\t\t}, this);\n\n\t\t// write out result array in reverse order\n\t\tlet resultStr = \"\";\n\t\tfor (let i = result.length - 1; i >= 0; --i) {\n\t\t\tresultStr += result[i];\n\t\t}\n\t\treturn resultStr;\n\t}\n\n\tnode(options) {\n\t\tconst node = getNode(this._source, options);\n\t\tif (this._replacements.length === 0) {\n\t\t\treturn node;\n\t\t}\n\t\tthis._sortReplacements();\n\t\tconst replace = new ReplacementEnumerator(this._replacements);\n\t\tconst output = [];\n\t\tlet position = 0;\n\t\tconst sources = Object.create(null);\n\t\tconst sourcesInLines = Object.create(null);\n\n\t\t// We build a new list of SourceNodes in \"output\"\n\t\t// from the original mapping data\n\n\t\tconst result = new SourceNode();\n\n\t\t// We need to add source contents manually\n\t\t// because \"walk\" will not handle it\n\t\tnode.walkSourceContents(function (sourceFile, sourceContent) {\n\t\t\tresult.setSourceContent(sourceFile, sourceContent);\n\t\t\tsources[\"$\" + sourceFile] = sourceContent;\n\t\t});\n\n\t\tconst replaceInStringNode = this._replaceInStringNode.bind(\n\t\t\tthis,\n\t\t\toutput,\n\t\t\treplace,\n\t\t\tfunction getOriginalSource(mapping) {\n\t\t\t\tconst key = \"$\" + mapping.source;\n\t\t\t\tlet lines = sourcesInLines[key];\n\t\t\t\tif (!lines) {\n\t\t\t\t\tconst source = sources[key];\n\t\t\t\t\tif (!source) return null;\n\t\t\t\t\tlines = source.split(\"\\n\").map(function (line) {\n\t\t\t\t\t\treturn line + \"\\n\";\n\t\t\t\t\t});\n\t\t\t\t\tsourcesInLines[key] = lines;\n\t\t\t\t}\n\t\t\t\t// line is 1-based\n\t\t\t\tif (mapping.line > lines.length) return null;\n\t\t\t\tconst line = lines[mapping.line - 1];\n\t\t\t\treturn line.substr(mapping.column);\n\t\t\t}\n\t\t);\n\n\t\tnode.walk(function (chunk, mapping) {\n\t\t\tposition = replaceInStringNode(chunk, position, mapping);\n\t\t});\n\n\t\t// If any replacements occur after the end of the original file, then we append them\n\t\t// directly to the end of the output\n\t\tconst remaining = replace.footer();\n\t\tif (remaining) {\n\t\t\toutput.push(remaining);\n\t\t}\n\n\t\tresult.add(output);\n\n\t\treturn result;\n\t}\n\n\tlistMap(options) {\n\t\tlet map = getListMap(this._source, options);\n\t\tthis._sortReplacements();\n\t\tlet currentIndex = 0;\n\t\tconst replacements = this._replacements;\n\t\tlet idxReplacement = replacements.length - 1;\n\t\tlet removeChars = 0;\n\t\tmap = map.mapGeneratedCode(function (str) {\n\t\t\tconst newCurrentIndex = currentIndex + str.length;\n\t\t\tif (removeChars > str.length) {\n\t\t\t\tremoveChars -= str.length;\n\t\t\t\tstr = \"\";\n\t\t\t} else {\n\t\t\t\tif (removeChars > 0) {\n\t\t\t\t\tstr = str.substr(removeChars);\n\t\t\t\t\tcurrentIndex += removeChars;\n\t\t\t\t\tremoveChars = 0;\n\t\t\t\t}\n\t\t\t\tlet finalStr = \"\";\n\t\t\t\twhile (\n\t\t\t\t\tidxReplacement >= 0 &&\n\t\t\t\t\treplacements[idxReplacement].start < newCurrentIndex\n\t\t\t\t) {\n\t\t\t\t\tconst repl = replacements[idxReplacement];\n\t\t\t\t\tconst start = Math.floor(repl.start);\n\t\t\t\t\tconst end = Math.floor(repl.end + 1);\n\t\t\t\t\tconst before = str.substr(0, Math.max(0, start - currentIndex));\n\t\t\t\t\tif (end <= newCurrentIndex) {\n\t\t\t\t\t\tconst after = str.substr(Math.max(0, end - currentIndex));\n\t\t\t\t\t\tfinalStr += before + repl.content;\n\t\t\t\t\t\tstr = after;\n\t\t\t\t\t\tcurrentIndex = Math.max(currentIndex, end);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfinalStr += before + repl.content;\n\t\t\t\t\t\tstr = \"\";\n\t\t\t\t\t\tremoveChars = end - newCurrentIndex;\n\t\t\t\t\t}\n\t\t\t\t\tidxReplacement--;\n\t\t\t\t}\n\t\t\t\tstr = finalStr + str;\n\t\t\t}\n\t\t\tcurrentIndex = newCurrentIndex;\n\t\t\treturn str;\n\t\t});\n\t\tlet extraCode = \"\";\n\t\twhile (idxReplacement >= 0) {\n\t\t\textraCode += replacements[idxReplacement].content;\n\t\t\tidxReplacement--;\n\t\t}\n\t\tif (extraCode) {\n\t\t\tmap.add(extraCode);\n\t\t}\n\t\treturn map;\n\t}\n\n\t_splitString(str, position) {\n\t\treturn position <= 0\n\t\t\t? [\"\", str]\n\t\t\t: [str.substr(0, position), str.substr(position)];\n\t}\n\n\t_replaceInStringNode(\n\t\toutput,\n\t\treplace,\n\t\tgetOriginalSource,\n\t\tnode,\n\t\tposition,\n\t\tmapping\n\t) {\n\t\tlet original = undefined;\n\n\t\tdo {\n\t\t\tlet splitPosition = replace.position - position;\n\t\t\t// If multiple replaces occur in the same location then the splitPosition may be\n\t\t\t// before the current position for the subsequent splits. Ensure it is >= 0\n\t\t\tif (splitPosition < 0) {\n\t\t\t\tsplitPosition = 0;\n\t\t\t}\n\t\t\tif (splitPosition >= node.length || replace.done) {\n\t\t\t\tif (replace.emit) {\n\t\t\t\t\tconst nodeEnd = new SourceNode(\n\t\t\t\t\t\tmapping.line,\n\t\t\t\t\t\tmapping.column,\n\t\t\t\t\t\tmapping.source,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tmapping.name\n\t\t\t\t\t);\n\t\t\t\t\toutput.push(nodeEnd);\n\t\t\t\t}\n\t\t\t\treturn position + node.length;\n\t\t\t}\n\n\t\t\tconst originalColumn = mapping.column;\n\n\t\t\t// Try to figure out if generated code matches original code of this segement\n\t\t\t// If this is the case we assume that it's allowed to move mapping.column\n\t\t\t// Because getOriginalSource can be expensive we only do it when neccessary\n\n\t\t\tlet nodePart;\n\t\t\tif (splitPosition > 0) {\n\t\t\t\tnodePart = node.slice(0, splitPosition);\n\t\t\t\tif (original === undefined) {\n\t\t\t\t\toriginal = getOriginalSource(mapping);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\toriginal &&\n\t\t\t\t\toriginal.length >= splitPosition &&\n\t\t\t\t\toriginal.startsWith(nodePart)\n\t\t\t\t) {\n\t\t\t\t\tmapping.column += splitPosition;\n\t\t\t\t\toriginal = original.substr(splitPosition);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst emit = replace.next();\n\t\t\tif (!emit) {\n\t\t\t\t// Stop emitting when we have found the beginning of the string to replace.\n\t\t\t\t// Emit the part of the string before splitPosition\n\t\t\t\tif (splitPosition > 0) {\n\t\t\t\t\tconst nodeStart = new SourceNode(\n\t\t\t\t\t\tmapping.line,\n\t\t\t\t\t\toriginalColumn,\n\t\t\t\t\t\tmapping.source,\n\t\t\t\t\t\tnodePart,\n\t\t\t\t\t\tmapping.name\n\t\t\t\t\t);\n\t\t\t\t\toutput.push(nodeStart);\n\t\t\t\t}\n\n\t\t\t\t// Emit the replacement value\n\t\t\t\tif (replace.value) {\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tnew SourceNode(\n\t\t\t\t\t\t\tmapping.line,\n\t\t\t\t\t\t\tmapping.column,\n\t\t\t\t\t\t\tmapping.source,\n\t\t\t\t\t\t\treplace.value,\n\t\t\t\t\t\t\tmapping.name || replace.name\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Recurse with remainder of the string as there may be multiple replaces within a single node\n\t\t\tnode = node.substr(splitPosition);\n\t\t\tposition += splitPosition;\n\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t} while (true);\n\t}\n\n\tupdateHash(hash) {\n\t\tthis._sortReplacements();\n\t\thash.update(\"ReplaceSource\");\n\t\tthis._source.updateHash(hash);\n\t\thash.update(this._name || \"\");\n\t\tfor (const repl of this._replacements) {\n\t\t\thash.update(`${repl.start}`);\n\t\t\thash.update(`${repl.end}`);\n\t\t\thash.update(`${repl.content}`);\n\t\t\thash.update(`${repl.insertIndex}`);\n\t\t\thash.update(`${repl.name}`);\n\t\t}\n\t}\n}\n\nclass ReplacementEnumerator {\n\t/**\n\t * @param {Replacement[]} replacements list of replacements\n\t */\n\tconstructor(replacements) {\n\t\tthis.replacements = replacements || [];\n\t\tthis.index = this.replacements.length;\n\t\tthis.done = false;\n\t\tthis.emit = false;\n\t\t// Set initial start position\n\t\tthis.next();\n\t}\n\n\tnext() {\n\t\tif (this.done) return true;\n\t\tif (this.emit) {\n\t\t\t// Start point found. stop emitting. set position to find end\n\t\t\tconst repl = this.replacements[this.index];\n\t\t\tconst end = Math.floor(repl.end + 1);\n\t\t\tthis.position = end;\n\t\t\tthis.value = repl.content;\n\t\t\tthis.name = repl.name;\n\t\t} else {\n\t\t\t// End point found. start emitting. set position to find next start\n\t\t\tthis.index--;\n\t\t\tif (this.index < 0) {\n\t\t\t\tthis.done = true;\n\t\t\t} else {\n\t\t\t\tconst nextRepl = this.replacements[this.index];\n\t\t\t\tconst start = Math.floor(nextRepl.start);\n\t\t\t\tthis.position = start;\n\t\t\t}\n\t\t}\n\t\tif (this.position < 0) this.position = 0;\n\t\tthis.emit = !this.emit;\n\t\treturn this.emit;\n\t}\n\n\tfooter() {\n\t\tif (!this.done && !this.emit) this.next(); // If we finished _replaceInNode mid emit we advance to next entry\n\t\tif (this.done) {\n\t\t\treturn [];\n\t\t} else {\n\t\t\tlet resultStr = \"\";\n\t\t\tfor (let i = this.index; i >= 0; i--) {\n\t\t\t\tconst repl = this.replacements[i];\n\t\t\t\t// this doesn't need to handle repl.name, because in SourceMaps generated code\n\t\t\t\t// without pointer to original source can't have a name\n\t\t\t\tresultStr += repl.content;\n\t\t\t}\n\t\t\treturn resultStr;\n\t\t}\n\t}\n}\n\nmodule.exports = ReplaceSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\n\nclass SizeOnlySource extends Source {\n\tconstructor(size) {\n\t\tsuper();\n\t\tthis._size = size;\n\t}\n\n\t_error() {\n\t\treturn new Error(\n\t\t\t\"Content and Map of this Source is not available (only size() is supported)\"\n\t\t);\n\t}\n\n\tsize() {\n\t\treturn this._size;\n\t}\n\n\tsource() {\n\t\tthrow this._error();\n\t}\n\n\tbuffer() {\n\t\tthrow this._error();\n\t}\n\n\tmap(options) {\n\t\tthrow this._error();\n\t}\n\n\tupdateHash() {\n\t\tthrow this._error();\n\t}\n}\n\nmodule.exports = SizeOnlySource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass Source {\n\tsource() {\n\t\tthrow new Error(\"Abstract\");\n\t}\n\n\tbuffer() {\n\t\tconst source = this.source();\n\t\tif (Buffer.isBuffer(source)) return source;\n\t\treturn Buffer.from(source, \"utf-8\");\n\t}\n\n\tsize() {\n\t\treturn this.buffer().length;\n\t}\n\n\tmap(options) {\n\t\treturn null;\n\t}\n\n\tsourceAndMap(options) {\n\t\treturn {\n\t\t\tsource: this.source(),\n\t\t\tmap: this.map(options)\n\t\t};\n\t}\n\n\tupdateHash(hash) {\n\t\tthrow new Error(\"Abstract\");\n\t}\n}\n\nmodule.exports = Source;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\nconst { SourceNode, SourceMapConsumer } = require(\"source-map\");\nconst { SourceListMap, fromStringWithSourceMap } = require(\"source-list-map\");\nconst { getSourceAndMap, getMap } = require(\"./helpers\");\nconst applySourceMap = require(\"./applySourceMap\");\n\nclass SourceMapSource extends Source {\n\tconstructor(\n\t\tvalue,\n\t\tname,\n\t\tsourceMap,\n\t\toriginalSource,\n\t\tinnerSourceMap,\n\t\tremoveOriginalSource\n\t) {\n\t\tsuper();\n\t\tconst valueIsBuffer = Buffer.isBuffer(value);\n\t\tthis._valueAsString = valueIsBuffer ? undefined : value;\n\t\tthis._valueAsBuffer = valueIsBuffer ? value : undefined;\n\n\t\tthis._name = name;\n\n\t\tthis._hasSourceMap = !!sourceMap;\n\t\tconst sourceMapIsBuffer = Buffer.isBuffer(sourceMap);\n\t\tconst sourceMapIsString = typeof sourceMap === \"string\";\n\t\tthis._sourceMapAsObject =\n\t\t\tsourceMapIsBuffer || sourceMapIsString ? undefined : sourceMap;\n\t\tthis._sourceMapAsString = sourceMapIsString ? sourceMap : undefined;\n\t\tthis._sourceMapAsBuffer = sourceMapIsBuffer ? sourceMap : undefined;\n\n\t\tthis._hasOriginalSource = !!originalSource;\n\t\tconst originalSourceIsBuffer = Buffer.isBuffer(originalSource);\n\t\tthis._originalSourceAsString = originalSourceIsBuffer\n\t\t\t? undefined\n\t\t\t: originalSource;\n\t\tthis._originalSourceAsBuffer = originalSourceIsBuffer\n\t\t\t? originalSource\n\t\t\t: undefined;\n\n\t\tthis._hasInnerSourceMap = !!innerSourceMap;\n\t\tconst innerSourceMapIsBuffer = Buffer.isBuffer(innerSourceMap);\n\t\tconst innerSourceMapIsString = typeof innerSourceMap === \"string\";\n\t\tthis._innerSourceMapAsObject =\n\t\t\tinnerSourceMapIsBuffer || innerSourceMapIsString\n\t\t\t\t? undefined\n\t\t\t\t: innerSourceMap;\n\t\tthis._innerSourceMapAsString = innerSourceMapIsString\n\t\t\t? innerSourceMap\n\t\t\t: undefined;\n\t\tthis._innerSourceMapAsBuffer = innerSourceMapIsBuffer\n\t\t\t? innerSourceMap\n\t\t\t: undefined;\n\n\t\tthis._removeOriginalSource = removeOriginalSource;\n\t}\n\n\t_ensureValueBuffer() {\n\t\tif (this._valueAsBuffer === undefined) {\n\t\t\tthis._valueAsBuffer = Buffer.from(this._valueAsString, \"utf-8\");\n\t\t}\n\t}\n\n\t_ensureValueString() {\n\t\tif (this._valueAsString === undefined) {\n\t\t\tthis._valueAsString = this._valueAsBuffer.toString(\"utf-8\");\n\t\t}\n\t}\n\n\t_ensureOriginalSourceBuffer() {\n\t\tif (this._originalSourceAsBuffer === undefined && this._hasOriginalSource) {\n\t\t\tthis._originalSourceAsBuffer = Buffer.from(\n\t\t\t\tthis._originalSourceAsString,\n\t\t\t\t\"utf-8\"\n\t\t\t);\n\t\t}\n\t}\n\n\t_ensureOriginalSourceString() {\n\t\tif (this._originalSourceAsString === undefined && this._hasOriginalSource) {\n\t\t\tthis._originalSourceAsString = this._originalSourceAsBuffer.toString(\n\t\t\t\t\"utf-8\"\n\t\t\t);\n\t\t}\n\t}\n\n\t_ensureInnerSourceMapObject() {\n\t\tif (this._innerSourceMapAsObject === undefined && this._hasInnerSourceMap) {\n\t\t\tthis._ensureInnerSourceMapString();\n\t\t\tthis._innerSourceMapAsObject = JSON.parse(this._innerSourceMapAsString);\n\t\t}\n\t}\n\n\t_ensureInnerSourceMapBuffer() {\n\t\tif (this._innerSourceMapAsBuffer === undefined && this._hasInnerSourceMap) {\n\t\t\tthis._ensureInnerSourceMapString();\n\t\t\tthis._innerSourceMapAsBuffer = Buffer.from(\n\t\t\t\tthis._innerSourceMapAsString,\n\t\t\t\t\"utf-8\"\n\t\t\t);\n\t\t}\n\t}\n\n\t_ensureInnerSourceMapString() {\n\t\tif (this._innerSourceMapAsString === undefined && this._hasInnerSourceMap) {\n\t\t\tif (this._innerSourceMapAsBuffer !== undefined) {\n\t\t\t\tthis._innerSourceMapAsString = this._innerSourceMapAsBuffer.toString(\n\t\t\t\t\t\"utf-8\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._innerSourceMapAsString = JSON.stringify(\n\t\t\t\t\tthis._innerSourceMapAsObject\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t_ensureSourceMapObject() {\n\t\tif (this._sourceMapAsObject === undefined) {\n\t\t\tthis._ensureSourceMapString();\n\t\t\tthis._sourceMapAsObject = JSON.parse(this._sourceMapAsString);\n\t\t}\n\t}\n\n\t_ensureSourceMapBuffer() {\n\t\tif (this._sourceMapAsBuffer === undefined) {\n\t\t\tthis._ensureSourceMapString();\n\t\t\tthis._sourceMapAsBuffer = Buffer.from(this._sourceMapAsString, \"utf-8\");\n\t\t}\n\t}\n\n\t_ensureSourceMapString() {\n\t\tif (this._sourceMapAsString === undefined) {\n\t\t\tif (this._sourceMapAsBuffer !== undefined) {\n\t\t\t\tthis._sourceMapAsString = this._sourceMapAsBuffer.toString(\"utf-8\");\n\t\t\t} else {\n\t\t\t\tthis._sourceMapAsString = JSON.stringify(this._sourceMapAsObject);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetArgsAsBuffers() {\n\t\tthis._ensureValueBuffer();\n\t\tthis._ensureSourceMapBuffer();\n\t\tthis._ensureOriginalSourceBuffer();\n\t\tthis._ensureInnerSourceMapBuffer();\n\t\treturn [\n\t\t\tthis._valueAsBuffer,\n\t\t\tthis._name,\n\t\t\tthis._sourceMapAsBuffer,\n\t\t\tthis._originalSourceAsBuffer,\n\t\t\tthis._innerSourceMapAsBuffer,\n\t\t\tthis._removeOriginalSource\n\t\t];\n\t}\n\n\tsource() {\n\t\tthis._ensureValueString();\n\t\treturn this._valueAsString;\n\t}\n\n\tmap(options) {\n\t\tif (!this._hasInnerSourceMap) {\n\t\t\tthis._ensureSourceMapObject();\n\t\t\treturn this._sourceMapAsObject;\n\t\t}\n\t\treturn getMap(this, options);\n\t}\n\n\tsourceAndMap(options) {\n\t\tif (!this._hasInnerSourceMap) {\n\t\t\tthis._ensureValueString();\n\t\t\tthis._ensureSourceMapObject();\n\t\t\treturn {\n\t\t\t\tsource: this._valueAsString,\n\t\t\t\tmap: this._sourceMapAsObject\n\t\t\t};\n\t\t}\n\t\treturn getSourceAndMap(this, options);\n\t}\n\n\tnode(options) {\n\t\tthis._ensureValueString();\n\t\tthis._ensureSourceMapObject();\n\t\tthis._ensureOriginalSourceString();\n\t\tlet node = SourceNode.fromStringWithSourceMap(\n\t\t\tthis._valueAsString,\n\t\t\tnew SourceMapConsumer(this._sourceMapAsObject)\n\t\t);\n\t\tnode.setSourceContent(this._name, this._originalSourceAsString);\n\t\tif (this._hasInnerSourceMap) {\n\t\t\tthis._ensureInnerSourceMapObject();\n\t\t\tnode = applySourceMap(\n\t\t\t\tnode,\n\t\t\t\tnew SourceMapConsumer(this._innerSourceMapAsObject),\n\t\t\t\tthis._name,\n\t\t\t\tthis._removeOriginalSource\n\t\t\t);\n\t\t}\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\tthis._ensureValueString();\n\t\tthis._ensureSourceMapObject();\n\t\toptions = options || {};\n\t\tif (options.module === false)\n\t\t\treturn new SourceListMap(\n\t\t\t\tthis._valueAsString,\n\t\t\t\tthis._name,\n\t\t\t\tthis._valueAsString\n\t\t\t);\n\n\t\treturn fromStringWithSourceMap(\n\t\t\tthis._valueAsString,\n\t\t\tthis._sourceMapAsObject\n\t\t);\n\t}\n\n\tupdateHash(hash) {\n\t\tthis._ensureValueBuffer();\n\t\tthis._ensureSourceMapBuffer();\n\t\tthis._ensureOriginalSourceBuffer();\n\t\tthis._ensureInnerSourceMapBuffer();\n\n\t\thash.update(\"SourceMapSource\");\n\n\t\thash.update(this._valueAsBuffer);\n\n\t\thash.update(this._sourceMapAsBuffer);\n\n\t\tif (this._hasOriginalSource) {\n\t\t\thash.update(this._originalSourceAsBuffer);\n\t\t}\n\n\t\tif (this._hasInnerSourceMap) {\n\t\t\thash.update(this._innerSourceMapAsBuffer);\n\t\t}\n\n\t\thash.update(this._removeOriginalSource ? \"true\" : \"false\");\n\t}\n}\n\nmodule.exports = SourceMapSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst SourceNode = require(\"source-map\").SourceNode;\nconst SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\n\nconst applySourceMap = function (\n\tsourceNode,\n\tsourceMapConsumer,\n\tsourceFile,\n\tremoveGeneratedCodeForSourceFile\n) {\n\t// The following notations are used to name stuff:\n\t// Left <------------> Middle <-------------------> Right\n\t// Input arguments:\n\t//        sourceNode                                       - Code mapping from Left to Middle\n\t//                   sourceFile                            - Name of a Middle file\n\t//                              sourceMapConsumer          - Code mapping from Middle to Right\n\t// Variables:\n\t//           l2m                      m2r\n\t// Left <-----------------------------------------> Right\n\t// Variables:\n\t//                       l2r\n\n\tconst l2rResult = new SourceNode();\n\tconst l2rOutput = [];\n\n\tconst middleSourceContents = {};\n\n\tconst m2rMappingsByLine = {};\n\n\tconst rightSourceContentsSet = {};\n\tconst rightSourceContentsLines = {};\n\n\t// Store all mappings by generated line\n\tsourceMapConsumer.eachMapping(\n\t\tfunction (mapping) {\n\t\t\t(m2rMappingsByLine[mapping.generatedLine] =\n\t\t\t\tm2rMappingsByLine[mapping.generatedLine] || []).push(mapping);\n\t\t},\n\t\tnull,\n\t\tSourceMapConsumer.GENERATED_ORDER\n\t);\n\n\tconst findM2rMapping = (line, column) => {\n\t\tconst m2rMappings = m2rMappingsByLine[line];\n\t\tlet l = 0;\n\t\tlet r = m2rMappings.length;\n\t\twhile (l < r) {\n\t\t\tlet m = (l + r) >> 1;\n\t\t\tif (m2rMappings[m].generatedColumn <= column) {\n\t\t\t\tl = m + 1;\n\t\t\t} else {\n\t\t\t\tr = m;\n\t\t\t}\n\t\t}\n\t\tif (l === 0) return undefined;\n\t\treturn m2rMappings[l - 1];\n\t};\n\n\t// Store all source contents\n\tsourceNode.walkSourceContents(function (source, content) {\n\t\tmiddleSourceContents[\"$\" + source] = content;\n\t});\n\n\tconst middleSource = middleSourceContents[\"$\" + sourceFile];\n\tconst middleSourceLines = middleSource ? middleSource.split(\"\\n\") : undefined;\n\n\t// Walk all left to middle mappings\n\tsourceNode.walk(function (chunk, middleMapping) {\n\t\t// Find a mapping from middle to right\n\t\tif (\n\t\t\tmiddleMapping.source === sourceFile &&\n\t\t\tmiddleMapping.line &&\n\t\t\tm2rMappingsByLine[middleMapping.line]\n\t\t) {\n\t\t\t// For minimized sources this is performance-relevant,\n\t\t\t// since all mappings are in a single line, use a binary search\n\t\t\tlet m2rBestFit = findM2rMapping(middleMapping.line, middleMapping.column);\n\t\t\tif (m2rBestFit) {\n\t\t\t\tlet allowMiddleName = false;\n\t\t\t\tlet middleLine;\n\t\t\t\tlet rightSourceContent;\n\t\t\t\tlet rightSourceContentLines;\n\t\t\t\tconst rightSource = m2rBestFit.source;\n\t\t\t\t// Check if we have middle and right source for this mapping\n\t\t\t\t// Then we could have an \"identify\" mapping\n\t\t\t\tif (\n\t\t\t\t\tmiddleSourceLines &&\n\t\t\t\t\trightSource &&\n\t\t\t\t\t(middleLine = middleSourceLines[m2rBestFit.generatedLine - 1]) &&\n\t\t\t\t\t((rightSourceContentLines = rightSourceContentsLines[rightSource]) ||\n\t\t\t\t\t\t(rightSourceContent = sourceMapConsumer.sourceContentFor(\n\t\t\t\t\t\t\trightSource,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t)))\n\t\t\t\t) {\n\t\t\t\t\tif (!rightSourceContentLines) {\n\t\t\t\t\t\trightSourceContentLines = rightSourceContentsLines[\n\t\t\t\t\t\t\trightSource\n\t\t\t\t\t\t] = rightSourceContent.split(\"\\n\");\n\t\t\t\t\t}\n\t\t\t\t\tconst rightLine =\n\t\t\t\t\t\trightSourceContentLines[m2rBestFit.originalLine - 1];\n\t\t\t\t\tif (rightLine) {\n\t\t\t\t\t\tconst offset = middleMapping.column - m2rBestFit.generatedColumn;\n\t\t\t\t\t\tif (offset > 0) {\n\t\t\t\t\t\t\tconst middlePart = middleLine.slice(\n\t\t\t\t\t\t\t\tm2rBestFit.generatedColumn,\n\t\t\t\t\t\t\t\tmiddleMapping.column\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst rightPart = rightLine.slice(\n\t\t\t\t\t\t\t\tm2rBestFit.originalColumn,\n\t\t\t\t\t\t\t\tm2rBestFit.originalColumn + offset\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (middlePart === rightPart) {\n\t\t\t\t\t\t\t\t// When original and generated code is equal we assume we have an \"identity\" mapping\n\t\t\t\t\t\t\t\t// In this case we can offset the original position\n\t\t\t\t\t\t\t\tm2rBestFit = Object.assign({}, m2rBestFit, {\n\t\t\t\t\t\t\t\t\toriginalColumn: m2rBestFit.originalColumn + offset,\n\t\t\t\t\t\t\t\t\tgeneratedColumn: middleMapping.column,\n\t\t\t\t\t\t\t\t\tname: undefined\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!m2rBestFit.name && middleMapping.name) {\n\t\t\t\t\t\t\tallowMiddleName =\n\t\t\t\t\t\t\t\trightLine.slice(\n\t\t\t\t\t\t\t\t\tm2rBestFit.originalColumn,\n\t\t\t\t\t\t\t\t\tm2rBestFit.originalColumn + middleMapping.name.length\n\t\t\t\t\t\t\t\t) === middleMapping.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Construct a left to right node from the found middle to right mapping\n\t\t\t\tlet source = m2rBestFit.source;\n\t\t\t\t// Workaround for bug in source-map\n\t\t\t\t// null sources are incorrectly normalized to \".\"\n\t\t\t\tif (source && source !== \".\") {\n\t\t\t\t\tl2rOutput.push(\n\t\t\t\t\t\tnew SourceNode(\n\t\t\t\t\t\t\tm2rBestFit.originalLine,\n\t\t\t\t\t\t\tm2rBestFit.originalColumn,\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tallowMiddleName ? middleMapping.name : m2rBestFit.name\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\t// Set the source contents once\n\t\t\t\t\tif (!(\"$\" + source in rightSourceContentsSet)) {\n\t\t\t\t\t\trightSourceContentsSet[\"$\" + source] = true;\n\t\t\t\t\t\tconst sourceContent = sourceMapConsumer.sourceContentFor(\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (sourceContent) {\n\t\t\t\t\t\t\tl2rResult.setSourceContent(source, sourceContent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t(removeGeneratedCodeForSourceFile &&\n\t\t\t\tmiddleMapping.source === sourceFile) ||\n\t\t\t!middleMapping.source\n\t\t) {\n\t\t\t// Construct a left to middle node with only generated code\n\t\t\t// Because user do not want mappings to middle sources\n\t\t\t// Or this chunk has no mapping\n\t\t\tl2rOutput.push(chunk);\n\t\t\treturn;\n\t\t}\n\n\t\t// Construct a left to middle node\n\t\tconst source = middleMapping.source;\n\t\tl2rOutput.push(\n\t\t\tnew SourceNode(\n\t\t\t\tmiddleMapping.line,\n\t\t\t\tmiddleMapping.column,\n\t\t\t\tsource,\n\t\t\t\tchunk,\n\t\t\t\tmiddleMapping.name\n\t\t\t)\n\t\t);\n\t\tif (\"$\" + source in middleSourceContents) {\n\t\t\tif (!(\"$\" + source in rightSourceContentsSet)) {\n\t\t\t\tl2rResult.setSourceContent(source, middleSourceContents[\"$\" + source]);\n\t\t\t\tdelete middleSourceContents[\"$\" + source];\n\t\t\t}\n\t\t}\n\t});\n\n\t// Put output into the resulting SourceNode\n\tl2rResult.add(l2rOutput);\n\treturn l2rResult;\n};\n\nmodule.exports = applySourceMap;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { SourceNode, SourceMapConsumer } = require(\"source-map\");\nconst { SourceListMap, fromStringWithSourceMap } = require(\"source-list-map\");\n\nexports.getSourceAndMap = (inputSource, options) => {\n\tlet source;\n\tlet map;\n\tif (options && options.columns === false) {\n\t\tconst res = inputSource.listMap(options).toStringWithSourceMap({\n\t\t\tfile: \"x\"\n\t\t});\n\t\tsource = res.source;\n\t\tmap = res.map;\n\t} else {\n\t\tconst res = inputSource.node(options).toStringWithSourceMap({\n\t\t\tfile: \"x\"\n\t\t});\n\t\tsource = res.code;\n\t\tmap = res.map.toJSON();\n\t}\n\tif (!map || !map.sources || map.sources.length === 0) map = null;\n\n\treturn {\n\t\tsource,\n\t\tmap\n\t};\n};\n\nexports.getMap = (source, options) => {\n\tlet map;\n\tif (options && options.columns === false) {\n\t\tmap = source.listMap(options).toStringWithSourceMap({\n\t\t\tfile: \"x\"\n\t\t}).map;\n\t} else {\n\t\tmap = source\n\t\t\t.node(options)\n\t\t\t.toStringWithSourceMap({\n\t\t\t\tfile: \"x\"\n\t\t\t})\n\t\t\t.map.toJSON();\n\t}\n\tif (!map || !map.sources || map.sources.length === 0) return null;\n\treturn map;\n};\n\nexports.getNode = (source, options) => {\n\tif (typeof source.node === \"function\") {\n\t\treturn source.node(options);\n\t} else {\n\t\tconst sourceAndMap = source.sourceAndMap(options);\n\t\tif (sourceAndMap.map) {\n\t\t\treturn SourceNode.fromStringWithSourceMap(\n\t\t\t\tsourceAndMap.source,\n\t\t\t\tnew SourceMapConsumer(sourceAndMap.map)\n\t\t\t);\n\t\t} else {\n\t\t\treturn new SourceNode(null, null, null, sourceAndMap.source);\n\t\t}\n\t}\n};\n\nexports.getListMap = (source, options) => {\n\tif (typeof source.listMap === \"function\") {\n\t\treturn source.listMap(options);\n\t} else {\n\t\tconst sourceAndMap = source.sourceAndMap(options);\n\t\tif (sourceAndMap.map) {\n\t\t\treturn fromStringWithSourceMap(sourceAndMap.source, sourceAndMap.map);\n\t\t} else {\n\t\t\treturn new SourceListMap(sourceAndMap.source);\n\t\t}\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nconst defineExport = (name, fn) => {\n\tlet value;\n\tObject.defineProperty(exports, name, {\n\t\tget: () => {\n\t\t\tif (fn !== undefined) {\n\t\t\t\tvalue = fn();\n\t\t\t\tfn = undefined;\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\t\tconfigurable: true\n\t});\n};\n\ndefineExport(\"Source\", () => require(\"./Source\"));\n\ndefineExport(\"RawSource\", () => require(\"./RawSource\"));\ndefineExport(\"OriginalSource\", () => require(\"./OriginalSource\"));\ndefineExport(\"SourceMapSource\", () => require(\"./SourceMapSource\"));\ndefineExport(\"CachedSource\", () => require(\"./CachedSource\"));\ndefineExport(\"ConcatSource\", () => require(\"./ConcatSource\"));\ndefineExport(\"ReplaceSource\", () => require(\"./ReplaceSource\"));\ndefineExport(\"PrefixSource\", () => require(\"./PrefixSource\"));\ndefineExport(\"SizeOnlySource\", () => require(\"./SizeOnlySource\"));\ndefineExport(\"CompatSource\", () => require(\"./CompatSource\"));\n","const { ReplaceSource } = require('webpack-sources')\n\nconst PLUGIN_NAME = 'GrafeoWebpackPlugin'\n\n/**\n * @constructor\n * @param {string} [opts.name] \n * @param {string} [opts.filename]\n * @param {Object} [opts.shared]\n * @param {boolean} [opts.updateExternals]\n * @param {boolean} [opts.deleteOptimization]\n * @param {boolean} [opts.namePrefixExternal]\n */\nclass GrafeoWebpackPlugin {\n\n  constructor(opts) {\n    this.options = {\n      filename: 'remoteEntry.js',\n      updateExternals: true,\n      namePrefixExternal: true,\n      deleteOptimization: true,\n      updateDevServer: true,\n      ...opts\n    }\n\n    try {\n      this.pkg = require(require('path').resolve(process.cwd(), 'package.json'))\n      if (!this.options.name && this.pkg) this.options.name = this.pkg.name\n    } catch {}\n  }\n\n  static devServerConfig(devServer = {}) {\n    let port;\n    if (typeof devServer === 'number') {\n      port = devServer\n      devServer = {}\n    }\n    devServer.headers = devServer.headers || {}\n    devServer.headers['Access-Control-Allow-Origin'] = '*'\n    devServer.disableHostCheck = true\n    if (port) devServer.port = port\n    return devServer\n  }\n\n  apply(compiler) {\n    const { filename, shared, updateExternals, deleteOptimization, name, namePrefixExternal } = this.options\n\n    compiler.hooks.afterEnvironment.tap(PLUGIN_NAME, () => {\n      const options = compiler.options\n      options.output.filename = this.options.filename\n      options.output.libraryTarget = 'system'\n      delete options.output.library\n      if (name) {\n        options.output.jsonpFunction = `webpackJsonp${name}`\n        options.output.devtoolNamespace = options.output.devtoolNamespace || name\n      }\n      options.module.rules.push({ parser: { system: false } })\n      if (deleteOptimization && options.optimization) { \n        delete options.optimization.splitChunks\n        delete options.optimization.runtimeChunk\n      }\n\n      if (options.devtool && (options.sourceMap || (options.sourceMap === 'object' && options.sourceMap.scripts === true))) delete options.devtool\n\n      if (updateExternals) {\n        const originExternals = options.externals\n        const externals = Array.isArray(originExternals) ? originExternals : [originExternals]\n        if (shared) externals.push(...Object.keys(shared)) \n        if (name && namePrefixExternal) {\n          const scope = name.split('/')[0]\n          if (scope) externals.push(new RegExp(`^${scope}\\\\/.+`))\n        }\n        options.externals = externals.filter(Boolean)\n      }\n    })\n\n    if (shared) {\n      const code = JSON.stringify(shared)\n      compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {\n        compilation.hooks.optimizeChunkAssets.tap(PLUGIN_NAME, (chunks) => {\n          chunks.forEach((chunk) => {\n            if (chunk.files[0] === filename && chunk.isOnlyInitial()) {\n              compilation.updateAsset(filename, (old) => {\n                const source = new ReplaceSource(old)\n                source.insert(old.source().lastIndexOf(')'), `,${code}`)\n                return source\n              })\n            }\n          })\n        })\n      });\n    }\n  }\n}\n\nmodule.exports = GrafeoWebpackPlugin\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => [];\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 544;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(10);\n","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}